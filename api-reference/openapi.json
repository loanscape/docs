{
  "openapi": "3.0.1",
  "info": {
    "title": "Loanscape API",
    "description": "The Loanscape API allows lenders to fetch data for their applications on Loanscape.",
    "license": {
      "name": "UNLICENSED"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.loanscape.io/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/applications": {
      "get": {
        "description": "Retrieve a list of applications with basic data for each application.<Info>By default, only `_id` is returned. Optionally request further fields by passing them in the `fields` parameter in the query. Fields within the broker object should be specifically requested with the format `broker.name`. The example response to the right shows all of the available options.<br/><br/>**For example, to return all possible fields:**<br/>`https://app.loanscape.io/api/v1?fields=status,tag,channels,assignedAccountExecutive,dateCreated,dateApproved,dateStatusUpdated,renewalDate,broker.name,broker.nmls,broker.pointOfContact`</Info>",
        "parameters": [
          {
              "name": "fields",
              "in": "query",
              "description": "Additional fields to fetch. Separate multiple fields with commas. (optional)",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applications returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LightApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{_id}": {
      "get": {
        "description": "Retrieve full data for a given application.<Info>By default, only `_id` is returned. Optionally request further fields by passing them in the `fields` parameter in the query. Fields within the broker object should be specifically requested with the format `broker.name`. The example response to the right shows all of the available options.<br/><br/>**For example, to return all possible fields:**<br/>`https://app.loanscape.io/api/v1?fields=status,tag,channels,assignedAccountExecutive,assignedUsers,dateCreated,dateApproved,dateStatusUpdated,renewalDate,broker.name,broker.nmls,broker.address,broker.ein,broker.pointOfContact,broker.team,broker.dbas,broker.companyTypes,broker.operatingStates,broker.suretyBonds,broker.eoInsurance,broker.affiliations,broker.industryApprovals,broker.branches,broker.contractProcessors`</Info>",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "The _id of the application to fetch.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to fetch. Separate multiple fields with commas. (optional)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
        }
        ],
        "responses": {
          "200": {
            "description": "Application data returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullApplication"
                }
              }
            }
          },
          "400": {
            "description": "Error returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LightApplication": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "The application ID.",
            "type": "string"
          },
          "status": {
            "description": "The status of the application.",
            "type": "string"
          },
          "tag": { 
            "description": "The tag assigned by the lender's team.",
            "type": "string"
          },
          "channels": {
            "description": "The channels associated with the application.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedAccountExecutive": {
            "description": "Details of the assigned account executive on the lender's team.",
            "type": "object",
            "properties": {
              "_id": { "type": "string" },
              "name": { "type": "string" },
              "email": { "type": "string" },
              "phone": { "type": "string" }
            }
          },
          "dateCreated": { 
            "description": "The date that the application was created. This is an ISO string (e.g. 2011-10-05T14:48:00.000Z).",
            "type": "string" 
          },
          "dateApproved": { 
            "description": "The date that the application was approved. This is an ISO string (e.g. 2011-10-05T14:48:00.000Z).",
            "type": "string" 
          },
          "dateStatusUpdated": { 
            "description": "The date that the application's status was last updated (for example, approved or renewed). This is an ISO string (e.g. 2011-10-05T14:48:00.000Z).",
            "type": "string" 
          },
          "renewalDate": {
            "description": "The date that the next yearly document becomes due from the broker.", 
            "type": "string" 
          },
          "broker": {
            "type": "object",
            "description": "Details of the broker's company.",
            "properties": {
              "name": { "type": "string" },
              "nmls": { "type": "string" },
              "pointOfContact": {
                "type": "object",
                "description": "The point of contact indicated on the broker's company.",
                "properties": {
                  "_id": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "phone": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "FullApplication": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "The application ID.",
            "type": "string"
          },
          "status": {
            "description": "The status of the application.",
            "type": "string"
          },
          "tag": { 
            "description": "The tag assigned by the lender's team.",
            "type": "string"
          },
          "channels": {
            "description": "The channels associated with the application.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedAccountExecutive": {
            "description": "Details of the assigned account executive on the lender's team.",
            "type": "object",
            "properties": {
              "_id": { "type": "string" },
              "name": { "type": "string" },
              "email": { "type": "string" },
              "phone": { "type": "string" }
            }
          },
          "assignedUsers": {
            "description": "Details of the assigned users on the lender's team.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": { "type": "string" },
                "name": { "type": "string" },
                "email": { "type": "string" },
                "phone": { "type": "string" }
              }
            }
          },
          "dateCreated": { 
            "description": "The date that the application was created. This is an ISO string (e.g. 2011-10-05T14:48:00.000Z).",
            "type": "string" 
          },
          "dateApproved": { 
            "description": "The date that the application was approved. This is an ISO string (e.g. 2011-10-05T14:48:00.000Z).",
            "type": "string" 
          },
          "dateStatusUpdated": { 
            "description": "The date that the application's status was last updated (for example, approved or renewed). This is an ISO string (e.g. 2011-10-05T14:48:00.000Z).",
            "type": "string" 
          },
          "renewalDate": {
            "description": "The date that the next yearly document becomes due from the broker.", 
            "type": "string" 
          },
          "broker": {
            "type": "object",
            "description": "Details of the broker's company.",
            "properties": {
              "name": { "type": "string" },
              "nmls": { "type": "string" },
              "address": {
                "type": "object",
                "properties": {
                  "line1": { "type": "string" },
                  "line2": { "type": "string" },
                  "city": { "type": "string" },
                  "state": { "type": "string" },
                  "zip": { "type": "string" }
                }
              },
              "ein": { "type": "string" },
              "pointOfContact": {
                "type": "object",
                "description": "The point of contact indicated on the broker's company.",
                "properties": {
                  "_id": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "phone": { "type": "string" }
                }
              },
              "team": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": { "type": "string" },
                    "name": { "type": "string" },
                    "email": { "type": "string" },
                    "phone": { "type": "string" },
                    "role": { "type": "string" }
                  }
                }
              },
              "dbas": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": { "type": "string" },
                    "states": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              },
              "companyTypes": {
                "type": "array",
                "items": { "type": "string" }
              },
              "operatingStates": {
                "type": "array",
                "items": { "type": "string" }
              },
              "suretyBonds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "company": { "type": "string" },
                    "amount": { 
                      "description": "Amount is a number (e.g. 500) and indicates US dollars.",
                      "type": "number" 
                    },
                    "states": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "expiryDate": { "type": "string" }
                  }
                }
              },
              "eoInsurance": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "company": { "type": "string" },
                    "amount": { 
                      "description": "E&O insurance covering the broker. Amount is a number (e.g. 500) and indicates US dollars.",
                      "type": "number" 
                    },
                    "states": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "expiryDate": { "type": "string" }
                  }
                }
              },
              "affiliations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "affiliationType": { "type": "string" },
                    "companyName": { "type": "string" },
                    "address": {
                      "type": "object",
                      "properties": {
                        "line1": { "type": "string" },
                        "line2": { "type": "string" },
                        "city": { "type": "string" },
                        "state": { "type": "string" },
                        "zip": { "type": "string" }
                      }
                    },
                    "stateOfIncorporation": { "type": "string" },
                    "stateOfOperation": { "type": "string" },
                    "percentOwnership": { 
                      "description": "Number given indicates percent as an integer, not a decimal. For example, 50 indicates 50%.",
                      "type": "number"
                    }
                  }
                }
              },
              "industryApprovals": {
                "type": "object",
                "properties": {
                  "fha": { "type": "string" },
                  "va": { "type": "string" },
                  "fannieMae": { "type": "string" },
                  "freddieMac": { "type": "string" },
                  "mers": { "type": "string" },
                  "usda": { "type": "string" },
                  "fdic": { "type": "string" },
                  "ncua": { "type": "string" }
                }
              },
              "branches": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "line1": { "type": "string" },
                        "line2": { "type": "string" },
                        "city": { "type": "string" },
                        "state": { "type": "string" },
                        "zip": { "type": "string" }
                      }
                    },
                    "nmls": { "type": "string" },
                    "managerNmls": { "type": "string" }
                  }
                }
              },
              "contractProcessors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "companyName": { "type": "string" },
                    "companyNmls": { "type": "string" },
                    "address": {
                      "type": "object",
                      "properties": {
                        "line1": { "type": "string" },
                        "line2": { "type": "string" },
                        "city": { "type": "string" },
                        "state": { "type": "string" },
                        "zip": { "type": "string" }
                      }
                    },
                    "phone": { "type": "string" },
                    "email": { "type": "string" },
                    "pointOfContact": { 
                      "description": "The name of the point of contact.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },      
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}